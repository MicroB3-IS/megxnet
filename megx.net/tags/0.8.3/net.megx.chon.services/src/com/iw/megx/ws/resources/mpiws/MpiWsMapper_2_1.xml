<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iw.megx.ws.dao.mpiws.mappers.MpiWsMapper_2_1">
	
	<resultMap type="ChecklistItemDetails" id="ChecklistItemDetailsMap">
		<id column="id" property="id"/>
		<result column="item" property="item"/>
		<result column="checklist_name" property="checklistName"/>
		<result column="requirement" property="requirement"/>
		<result column="label" property="label"/>
		<result column="definition" property="definition"/>
		<result column="expected_value" property="expectedValue"/>
		<result column="expected_value_details" property="expectedValueDetails"/>
		<result column="value_type" property="valueType"/>
		<result column="syntax" property="syntax"/>
		<result column="example" property="example"/>
		<result column="help" property="help"/>
		<result column="occurrence" property="occurrence"/>
		<result column="regexp" property="regexp"/>
		<result column="sample_assoc" property="sampleAssoc"/>
	</resultMap>
	
	<resultMap type="IndependentMetadataItem" id="IndependentMetadataItemMap">
		<result column="item" property="item"/>
		<result column="label" property="label"/>
		<result column="definition" property="definition"/>
		<result column="expected_value" property="expectedValue"/>
		<result column="expected_value_details" property="expectedValueDetails"/>
		<result column="value_type" property="valueType"/>
		<result column="syntax" property="syntax"/>
		<result column="example" property="example"/>
		<result column="help" property="help"/>
		<result column="occurrence" property="occurrence"/>
		<result column="regexp" property="regexp"/>
		<result column="sample_assoc" property="sampleAssoc"/>
	</resultMap>
	
	<!-- MPI TYPES -->
	<resultMap type="HabLiteDist" id="HabLiteDistMap">
		<result column="tag" property="tag"/>
		<result column="quantity" property="quantity"/>
	</resultMap>
	
	<resultMap type="GenomeOverview" id="GenomeOverviewMap">
		<result column="entity_name" property="organismName"/>
		<result column="latlon" property="location"/>
		<!-- <result column="depth" property="depth"/> -->
		<result column="date_taken" property="dateSampled"/>
		<result column="hab_lite" property="envolite"/>
		<result column="phg_taxid" property="taxID"/>
		<result column="phg_gprj_id" property="genomePID"/>
	</resultMap>

	<resultMap type="RRNA" id="RRNAMap">
		<result column="entity_name" property="organismName"/>
		<result column="latlon" property="location"/>
		<result column="depth" property="depth"/>
		<result column="date_taken" property="dateSampled"/>
		<result column="hab_lite" property="envolite"/>
		<result column="num_sequences" property="num_sequences"/>
	</resultMap>	

	<resultMap type="Silva" id="SilvaMap">
		<result column="primaryaccession" property="primaryaccession"/>
	</resultMap>	
	
	<resultMap type="SamplingSite" id="SamplingSiteMap">
		<result column="label" property="samplingSite"/>
		<result column="descr" property="description"/>	
		<result column="latlon" property="location"/>
		<result column="num_samples" property="num_samples"/>
	</resultMap>	

	<resultMap type="Sample" id="SampleMap">
		<result column="site_name" property="Sample"/>
		<result column="study_type" property="Type"/>	
		<result column="depth" property="depth"/>
		<result column="date_taken" property="dateSampled"/>
		<result column="hab_lite" property="envolite"/>
		<result column="insitu" property="insitu"/>
		<result column="temperature" property="temperature"/>
		<result column="salinity" property="salinity"/>
		<result column="chlorophyll" property="chlorophyll"/>
	</resultMap>	

	<resultMap type="Metagenome" id="MetagenomeMap">
		<result column="entity_name" property="datasetName"/>
		<result column="latlon" property="location"/>  <!-- site_name ??? -->
		<result column="depth" property="depth"/>
		<result column="date_taken" property="dateSampled"/>
		<result column="hab_lite" property="envolite"/>
	</resultMap>	

	<resultMap type="IsMarine" id="IsMarineMap">
		<result column="marine" property="marine"/>
	</resultMap>	

	<resultMap type="WOA5" id="WOA5Map">
		<result column="parameter" property="parameter"/>
		<result column="value" property="value"/>
		<result column="unit" property="unit"/>
	</resultMap>	

	<resultMap type="WOD5" id="WOD5Map">
		<result column="year" property="year"/>
		<result column="month" property="month"/>
		<result column="temperature" property="temperature"/>
		<result column="salinity" property="salinity"/>
		<result column="oxygen" property="oxygen"/>
		<result column="phosphate" property="phosphate"/>
		<result column="silicate" property="silicate"/>
		<result column="nitrate" property="nitrate"/>
		<result column="ph" property="ph"/>
		<result column="chlorophyll" property="chlorophyll"/>
		<result column="alkalinity" property="alkalinity"/>
		<result column="plankton_biomass" property="plankton_biomass"/>
	</resultMap>	

	<resultMap type="BlastStatus" id="BlastStatusMap">
		<result column="status" property="status"/>
	</resultMap>

	<resultMap type="BlastJob" id="BlastJobMap">
		<result column="sid" property="sid"/>
		<result column="jid" property="jid"/>
	</resultMap>

	<resultMap type="BlastJobParams" id="BlastJobParamsMap">
		<result column="sid" property="sid"/>
		<result column="who" property="who"/>
		<result column="tool_label" property="tool_label"/>
		<result column="tool_ver" property="tool_ver"/>
		<result column="db" property="db"/>
		<result column="program_name" property="program_name"/>
		<result column="seq" property="seq"/>		
		<result column="evalue" property="evalue"/>
	</resultMap>



	<!-- MPI TYPES END -->

	<select id="getIndependentMetadataItems" resultMap="IndependentMetadataItemMap" parameterType="map">
		select 
		<foreach item="item" collection="cols" separator=",">
			<if test="item == 'item'">
				item
			</if>
			<if test="item == 'label'">
				label
			</if>
			<if test="item == 'definition'">
				definition
			</if>
			<if test="item == 'expected_value'">
				expected_value
			</if>
			<if test="item == 'expected_value_details'">
				expected_value_details
			</if>
			<if test="item == 'value_type'">
				value_type
			</if>
			<if test="item == 'syntax'">
				syntax
			</if>
			<if test="item == 'example'">
				example
			</if>
			<if test="item == 'help'">
				help
			</if>
			<if test="item == 'occurrence'">
				occurrence
			</if>
			<if test="item == 'regexp'">
				regexp
			</if>
			<if test="item == 'sample_assoc'">
				sample_assoc
			</if>
		</foreach>
		FROM gsc_db_2_1.all_item_details
 		WHERE item = #{item_name}
	</select>
	
	<select id="getGeneralSpecificationItems" resultMap="ChecklistItemDetailsMap" parameterType="string">
		SELECT item, clist AS checklist_name, requirement, label, definition, expected_value, expected_value_details, 
		       value_type, syntax, example, help, occurrence, regexp, sample_assoc
		  FROM gsc_db_2_1.clist_item_details 
		 WHERE clist = #{id}
	</select>
	
	
	<select id="getCombinedChecklistSpecificationItems" parameterType="map" resultMap="ChecklistItemDetailsMap">
		SELECT item, clist AS checklist_name, requirement, label, definition, expected_value, expected_value_details, 
		       value_type, syntax, example, help, occurrence, regexp, sample_assoc
		  FROM gsc_db_2_1.clist_item_details
		 WHERE clist = #{cl_name} 
		    OR clist = #{env_pkg} ORDER BY clist
	</select>
	
	<select id="getParticularSpecificationItem" resultMap="ChecklistItemDetailsMap" parameterType="map">
		SELECT item, clist AS checklist_name, requirement, label, definition, expected_value, expected_value_details, 
		       value_type, syntax, example, help, occurrence, regexp, sample_assoc
		  FROM gsc_db_2_1.clist_item_details
		 WHERE item = #{item_name} 
		       AND 
		       clist in (#{cl_name_env_pkg})
	</select>
	
	<!-- MPI SPECIFIC -->
	
	<select id="getHabLiteDist" resultMap="HabLiteDistMap" parameterType="map">
		SELECT hab_lite AS tag, COUNT(hab_lite) AS quantity 
			FROM web_r8.samples WHERE study_type=#{study} 
			GROUP BY hab_lite ORDER BY hab_lite ASC
			
			<if test="offset != ''">
				offset #{offset}
			</if>
 			<if test="limit != ''">
				limit #{limit}
			</if> 
	</select>
	
	
	<select id="getPhages" resultMap="GenomeOverviewMap" parameterType="map">
		SELECT * FROM web_r8.marine_phages as g 
			<if test="where != ''">
				WHERE #{where}
			</if>
			
<!-- 			<if test="offset != null"> -->
				offset #{offset}
<!-- 			</if> -->
<!--  			<if test="limit != null"> -->
				limit #{limit}
<!-- 			</if> -->
	</select>
	
	<insert id="insertPhagesList" useGeneratedKeys="true" parameterType="GenomeOverview">
		INSERT INTO web_r8.marine_phages (entity_name,latlon,depth,date_taken,hab_lite,phg_taxid,phg_gprj_id) VALUES (
			#{organismName},#{location},#{depth},#{dateSampled},#{envolite},#{taxID},#{genomePID} )
	</insert>



	<select id="getGenomes" resultMap="GenomeOverviewMap" parameterType="map">
		SELECT * FROM web_r8.genomes as g 
		<if test="where != ''">
			where #{where}
		</if> 
		ORDER BY site_name,latlon DESC
		
		<if test="offset != ''">
			offset #{offset}
		</if>
		<if test="limit != ''">
			limit #{limit}
		</if>
	</select>
	<select id="getGenomesCount" resultType="long" parameterType="map">
		SELECT (SELECT count(*) FROM web_r8.genomes as g 
<!-- 		<if test="where != ''"> -->
<!-- 			where #{where} -->
<!-- 		</if>  -->
		)
	</select>

	<select id="getPhagesCount" resultType="long" parameterType="map">
		SELECT (SELECT count(*) FROM web_r8.marine_phages as g 
<!-- 		<if test="where != ''"> -->
<!-- 			where #{where} -->
<!-- 		</if>  -->
		)
	</select>


	<select id="getSites" resultMap="SamplingSiteMap" parameterType="map">
		SELECT s.* FROM web_r8.sites as s 
		<if test="where != ''">
			where #{where}
		</if>  
		
		<if test="offset != ''">
			offset #{offset}
		</if>
		<if test="limit != ''">
			limit #{limit}
		</if>
	</select>

	<select id="getSilvaOverview" resultMap="RRNAMap" parameterType="map">
		SELECT * FROM web_r8.silva_overview_t
		<if test="offset != ''">
			offset #{offset}
		</if>
		<if test="limit != ''">
			limit #{limit}
		</if>		 
	</select>

	<select id="get_silva_by_geom" resultMap="SilvaMap" parameterType="map">
		SELECT primaryaccession FROM web.silva WHERE latlong=#{geom}
	</select>	

	<select id="getSamples" resultMap="SampleMap" parameterType="map">
		SELECT * FROM web_r8.gms_samples as s
		<if test="lat != '' and lon != ''">
			WHERE lat = #{lat} AND lon=#{lon}
		</if>
		
		<if test="offset != ''">
			offset #{offset}
		</if>
		<if test="limit != ''">
			limit #{limit}
		</if>		   
	</select>

	<select id="getMetagenomes" resultMap="MetagenomeMap" parameterType="map">
		SELECT * FROM web_r8.metagenomes as g 
		<if test="where != ''">
			where #{where}
		</if>  
		
		<if test="offset != ''">
			offset #{offset}
		</if>
		<if test="limit != ''">
			limit #{limit}
		</if>		
	</select>

	<select id="isMarine" resultMap="IsMarineMap" parameterType="map">
		<!-- 		SELECT TRUE as marine FROM elayers.ocean_limits as o WHERE ST_Within(ST_PointFromText('POINT(#{lon} #{lat})'),o.geom) IS TRUE -->
 		SELECT (count(*)>0) as marine FROM elayers.ocean_limits as o WHERE ST_Within(ST_PointFromText(#{lon} #{lat}),o.geom) IS TRUE
		<!-- 		SELECT (SELECT TRUE as marine FROM elayers.ocean_limits as o WHERE ST_Within(ST_PointFromText('POINT(#{lon} #{lat})'),o.geom) IS TRUE) IS TRUE  -->
	</select>	

	<select id="blastRunStatus" resultMap="BlastStatusMap" parameterType="map">
		SELECT core.blast_run_status(#{sid},#{jid}) 
	</select>
	
	<insert id="insertBlastRun" useGeneratedKeys="true" parameterType="map">
		INSERT INTO core.blast_run(sid, who, tool_label,tool_ver, db, program_name, seq, evalue) 
					VALUES (#{sid}, #{who}, #{tool_label}, #{tool_ver}, #{db}, #{program_name}, #{seq}, #{evalue}) <!--  RETURNING sid,jid  -->
	</insert>			 
	
	<select id="woa05_idw_ip" resultMap="WOA5Map" parameterType="map">
		<if test="param == 'all'">
			SELECT p.param, COALESCE(elayers.woa05_idw_ip(#{lon}::double precision, #{lat}::double precision, #{depth}::real, p.param::text, #{season}::smallint)::text,'-'::text) AS val, p.unit FROM stage_r6.units p WHERE source='woa05'
		</if>
		<if test="param != 'all'">
			SELECT p.param, COALESCE(elayers.woa05_idw_ip(#{lon}::double precision, #{lat}::double precision, #{depth}::real, #{param}::text, #{season}::smallint)::text,'-'::text) AS val, p.unit FROM stage_r6.units p WHERE source='woa05'
		</if>		 
	</select>

	<select id="wod05_idw_ip" resultMap="WOD5Map" parameterType="map">
		SELECT * FROM core.pp_wod05_idw_ip(#{lon}::real, #{lan}::real, #{depth}::real, #{buffer}::real) ORDER BY yr,mon
	</select>	

 
	
</mapper>