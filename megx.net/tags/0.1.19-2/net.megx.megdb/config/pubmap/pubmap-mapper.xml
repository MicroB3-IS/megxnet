<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.megx.megdb.pubmap.mappers.PubMapMapper">

	<!-- author, journal, sample mapping missing -->
	<resultMap id="articleMap" type="net.megx.model.Article">
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="pubstatus" jdbcType="VARCHAR" property="pubStatus" />
		<result column="linkout" jdbcType="VARCHAR" property="linkout" />
		<result column="volume" jdbcType="VARCHAR" property="volume" />
		<result column="issue" jdbcType="VARCHAR" property="issue" />
		<result column="yr" jdbcType="VARCHAR" property="publicationYear" />
		<result column="mon" jdbcType="VARCHAR" property="publicationMonth" />
		<result column="firstpage" jdbcType="VARCHAR" property="firstPage" />
		<result column="lastpage" jdbcType="VARCHAR" property="lastPage" />
		<result column="abstract" jdbcType="VARCHAR" property="abstractText" />
		<result column="published" jdbcType="BIT" property="published" />
		<result column="pdf_url" jdbcType="VARCHAR" property="pdf" />
		<result column="abstract_html_url" jdbcType="VARCHAR" property="abstractHTML" />
		<result column="fulltext_url" jdbcType="VARCHAR" property="fullTextHTML" />
		<result column="ctime" jdbcType="TIMESTAMP" property="created" />
		<result column="created_by" jdbcType="VARCHAR" property="createdBy" />
		<result column="utime" jdbcType="TIMESTAMP" property="updated" />
		<result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
		<result column="journal" jdbcType="VARCHAR" property="journal" />
	</resultMap>


	<resultMap id="journalMap" type="net.megx.model.Journal">
		<id column="title" jdbcType="VARCHAR" property="title" />
		<result column="publisher" jdbcType="VARCHAR" property="publisher" />
		<result column="iso_abbr" jdbcType="VARCHAR" property="isoAbbr" />
		<result column="med_abbr" jdbcType="VARCHAR" property="medAbbr" />
		<result column="homepage" jdbcType="VARCHAR" property="homepage" />
		<result column="pissn" jdbcType="VARCHAR" property="pissn" />
		<result column="eissn" jdbcType="VARCHAR" property="eissn" />
		<result column="country" jdbcType="VARCHAR" property="country" />
		<result column="pubstart" jdbcType="VARCHAR" property="pubstart" />
		<result column="lang" jdbcType="VARCHAR" property="lang" />
		<result column="nlmid" jdbcType="VARCHAR" property="nlmid" />
		<!-- <result column="created" jdbcType="TIMESTAMP" property="created" /> 
			<result column="created_by" jdbcType="VARCHAR" property="createdBy" /> <result 
			column="updated" jdbcType="TIMESTAMP" property="updated" /> <result column="updated_by" 
			jdbcType="VARCHAR" property="updatedBy" /> -->
	</resultMap>

	<resultMap id="authorMap" type="net.megx.model.Author">
		<id column="first_name" jdbcType="VARCHAR" property="firstName" />
		<id column="last_name" jdbcType="VARCHAR" property="lastName" />
		<id column="initials" jdbcType="VARCHAR" property="initials" />
		<id column="sex" jdbcType="CHAR" javaType="String" property="sexCode" />
		<result column="institute" jdbcType="VARCHAR" property="institute" />
	</resultMap>

	<sql id="Article_Column_List">
		id, id_code, title, pubstatus, linkout, journal, issue,
		volume, yr, mon,
		firstpage,
		lastpage, abstract, published, pdf_url,
		abstract_html_url, fulltext_url, ctime,
		created_by,
		utime, updated_by
	</sql>

	<resultMap id="articleDetailsMap" type="net.megx.model.impl.PubMapArticle">
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="pubstatus" jdbcType="VARCHAR" property="pubStatus" />
		<result column="linkout" jdbcType="VARCHAR" property="linkout" />
		<result column="volume" jdbcType="VARCHAR" property="volume" />
		<result column="issue" jdbcType="VARCHAR" property="issue" />
		<result column="yr" jdbcType="VARCHAR" property="publicationYear" />
		<result column="mon" jdbcType="VARCHAR" property="publicationMonth" />
		<result column="firstpage" jdbcType="VARCHAR" property="firstPage" />
		<result column="lastpage" jdbcType="VARCHAR" property="lastPage" />
		<result column="abstract" jdbcType="VARCHAR" property="abstractText" />
		<result column="published" jdbcType="BIT" property="published" />
		<result column="pdf_url" jdbcType="VARCHAR" property="pdf" />
		<result column="abstract_html_url" jdbcType="VARCHAR" property="abstractHTML" />
		<result column="fulltext_url" jdbcType="VARCHAR" property="fullTextHTML" />
		<result column="ctime" jdbcType="TIMESTAMP" property="created" />
		<result column="created_by" jdbcType="VARCHAR" property="createdBy" />
		<result column="utime" jdbcType="TIMESTAMP" property="updated" />
		<result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
		<association property="journal" javaType="net.megx.model.impl.PubMapJournal">
			<id property="title" column="journal_title" />
			<result property="isoAbbr" column="journal_iso_abbr" />
		</association>
		<collection property="authors" ofType="net.megx.model.impl.PubMapAuthor">
			<id column="author_first_name" jdbcType="VARCHAR" property="firstName" />
			<id column="author_last_name" jdbcType="VARCHAR" property="lastName" />
			<id column="author_initials" jdbcType="VARCHAR" property="initials" />
			<id column="author_sex" jdbcType="CHAR" javaType="String" property="sexCode" />
		</collection>
	</resultMap>
	
	<sql id="articlesQuery">
	select
		art.id,
		art.id_code,
     	art.title,
		art.pubstatus,
		art.linkout,
		art.journal,
		art.issue,
		art.volume,
		art.yr,
		art.mon,
		art.firstpage,
		art.lastpage,
		art.abstract,
		art.published,
		art.pdf_url,
		art.abstract_html_url,
		art.fulltext_url,
		art.ctime,
		art.created_by,
		art.utime,
		art.updated_by,
		
		j.title as journal_title, 
		j.publisher, 
		j.iso_abbr as journal_iso_abbr,
		j.med_abbr, j.homepage, j.pissn, j.eissn, 
        j.country, j.pubstart, j.lang, j.nlmid, j.created, j.created_by, j.updated, 
        j.updated_by,
        al.first_name as author_first_name, 
        al.initials as author_initials,
        al.last_name as author_last_name, 
        al.sex as author_sex,
        al.pos, al.corres
     from
		core.articles art inner join core.journals j on j.title = art.journal 
		                  inner join core.authorlists al ON art.id = al.article_id 
		                                                AND art.id_code = al.article_id_code
	</sql>
	
	<select id="getAllArticles" resultMap="articleDetailsMap">
		<include refid="articlesQuery"/>	
	 	order by id,al.pos
	</select>
	
	
	<select id="selectArticleDetailsById" resultMap="articleDetailsMap">
		<include refid="articlesQuery"/>
	 	where id = #{id} and id_code = #{idCode}
	 	order by id,al.pos 	 
	</select>
	
	<sql id="Author_Column_List">
		first_name, last_name, initials, sex, institute
	</sql>

	<select id="selectArticleById" parameterType="Article"
		resultMap="articleMap">
		select
		<include refid="Article_Column_List" />
		from core.articles
		<choose>
			<when test="DOI != null">
				where id = #{DOI,jdbcType=VARCHAR}
				and id_code =
				'doi'
			</when>
			<otherwise>
				where id = #{pmid,jdbcType=VARCHAR}
				and id_code = 'pmid'
			</otherwise>
		</choose>
	</select>



	<select id="selectAuthor" parameterType="Author" resultMap="authorMap">
		select
		<include refid="Author_Column_List" />
		from core.authors
		where first_name = #{firstName,jdbcType=VARCHAR}
		and
		last_name = #{lastName,jdbcType=VARCHAR}
		and initials =
		#{initials,jdbcType=VARCHAR}
		and sex = #{sexCode,jdbcType=VARCHAR}
	</select>


	<delete id="deleteArticle" parameterType="Article">
		delete from
		core.articles
		<choose>
			<when test="DOI != null">
				where id = #{DOI,jdbcType=VARCHAR}
				and id_code =
				'doi'
			</when>
			<otherwise>
				where id = #{pmid,jdbcType=VARCHAR}
				and id_code = 'pmid'
			</otherwise>
		</choose>
	</delete>

	<delete id="deleteAuthor" parameterType="Author">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Jun 15 
			03:30:10 CEST 2012. -->
		delete from core.authors
		where first_name =
		#{firstName,jdbcType=VARCHAR}
		and last_name =
		#{lastName,jdbcType=VARCHAR}
		and initials =
		#{initials,jdbcType=VARCHAR}
		and sex = #{sexCode,jdbcType=VARCHAR}
	</delete>



	<insert id="insertArticle" parameterType="Article">
		insert into core.articles (
		<include refid="Article_Column_List" />
		)
		<choose>
			<when test="DOI != null">
				#{DOI,jdbcType=VARCHAR},
				'doi',
			</when>
			<otherwise>
				#{pmid,jdbcType=VARCHAR},
				'pmid',
			</otherwise>
		</choose>
		#{title,jdbcType=VARCHAR},
		#{pubStatus,jdbcType=VARCHAR},
		#{linkout,jdbcType=VARCHAR}, #{journal,jdbcType=VARCHAR},
		#{issue,jdbcType=VARCHAR}, #{volume,jdbcType=VARCHAR},
		#{publicationYear,jdbcType=VARCHAR},
		#{publicationMonth,jdbcType=VARCHAR},
		#{firstPage,jdbcType=VARCHAR},
		#{lastPage,jdbcType=VARCHAR},
		#{abstractText,jdbcType=VARCHAR},
		#{published,jdbcType=BIT},
		#{pdf,jdbcType=VARCHAR},
		#{abstractHTML,jdbcType=VARCHAR},
		#{fullTextHTML,jdbcType=VARCHAR},
		#{created,jdbcType=TIMESTAMP},
		#{createdBy,jdbcType=VARCHAR},
		#{updated,jdbcType=TIMESTAMP},
		#{updatedBy,jdbcType=VARCHAR}
		)
	</insert>

	<insert id="insertArticleSelective" parameterType="Article">
		insert into core.articles
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,
			id_code,
			<if test="title != null">
				title,
			</if>

			<if test="pubStatus != null">
				pubstatus,
			</if>
			<if test="linkout != null">
				linkout,
			</if>
			journal,

			<if test="issue != null">
				issue,
			</if>

			<if test="volume != null">
				volume,
			</if>

			<if test="publicationYear != null">
				yr,
			</if>

			<if test="publicationMonth != null">
				mon,
			</if>

			<if test="firstPage != null">
				firstpage,
			</if>

			<if test="lastPage != null">
				lastpage,
			</if>

			<if test="abstractText != null">
				abstract,
			</if>

			<if test="published != null">
				published,
			</if>
			<if test="pdf != null">
				pdf_url,
			</if>
			<if test="abstractHTML != null">
				abstract_html_url,
			</if>
			<if test="fullTextHTML != null">
				fulltext_url,
			</if>
			<if test="created != null">
				ctime,
			</if>
			<if test="createdBy != null">
				created_by,
			</if>
			<if test="updated != null">
				utime,
			</if>
			<if test="updatedBy != null">
				updated_by,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<choose>
				<when test="DOI != null">
					#{DOI,jdbcType=VARCHAR},
					'doi',
				</when>
				<otherwise>
					#{pmid,jdbcType=VARCHAR},
					'pmid',
				</otherwise>
			</choose>

			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>

			<if test="pubStatus != null">
				#{pubStatus,jdbcType=VARCHAR},
			</if>
			<if test="linkout != null">
				#{linkout,jdbcType=VARCHAR},
			</if>

			<choose>
				<when test="journal.title == null">
					#{journal.isoAbbr,jdbcType=VARCHAR},
				</when>
				<otherwise>
					#{journal.title,jdbcType=VARCHAR},
				</otherwise>
			</choose>

			<if test="issue != null">
				#{issue,jdbcType=VARCHAR},
			</if>

			<if test="volume != null">
				#{volume,jdbcType=VARCHAR},
			</if>

			<if test="publicationYear != null">
				#{publicationYear,jdbcType=VARCHAR},
			</if>

			<if test="publicationMonth != null">
				#{publicationMonth,jdbcType=VARCHAR},
			</if>

			<if test="firstPage != null">
				#{firstPage,jdbcType=VARCHAR},
			</if>

			<if test="lastPage != null">
				#{lastPage,jdbcType=VARCHAR},
			</if>

			<if test="abstractText != null">
				#{abstractText,jdbcType=VARCHAR},
			</if>

			<if test="published != null">
				#{published,jdbcType=BIT},
			</if>
			<if test="pdf != null">
				#{pdf,jdbcType=VARCHAR},
			</if>
			<if test="abstractHTML != null">
				#{abstractHTML,jdbcType=VARCHAR},
			</if>
			<if test="fullTextHTML != null">
				#{fullTextHTML,jdbcType=VARCHAR},
			</if>
			<if test="created != null">
				#{created,jdbcType=TIMESTAMP},
			</if>
			<if test="createdBy != null">
				#{createdBy,jdbcType=VARCHAR},
			</if>
			<if test="updated != null">
				#{updated,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedBy != null">
				#{updatedBy,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>


	<insert id="insertJournalSelective" parameterType="net.megx.model.Journal">
		insert into core.journals
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="title != null">
				title,
			</if>
			<if test="publisher != null">
				publisher,
			</if>
			<if test="isoAbbr != null">
				iso_abbr,
			</if>
			<if test="medAbbr != null">
				med_abbr,
			</if>
			<if test="homepage != null">
				homepage,
			</if>
			<if test="pissn != null">
				pissn,
			</if>
			<if test="eissn != null">
				eissn,
			</if>
			<if test="country != null">
				country,
			</if>
			<if test="pubstart != null">
				pubstart,
			</if>
			<if test="lang != null">
				lang,
			</if>
			<if test="nlmid != null">
				nlmid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="publisher != null">
				#{publisher,jdbcType=VARCHAR},
			</if>
			<if test="isoAbbr != null">
				#{isoAbbr,jdbcType=VARCHAR},
			</if>
			<if test="medAbbr != null">
				#{medAbbr,jdbcType=VARCHAR},
			</if>
			<if test="homepage != null">
				#{homepage,jdbcType=VARCHAR},
			</if>
			<if test="pissn != null">
				#{pissn,jdbcType=VARCHAR},
			</if>
			<if test="eissn != null">
				#{eissn,jdbcType=VARCHAR},
			</if>
			<if test="country != null">
				#{country,jdbcType=VARCHAR},
			</if>
			<if test="pubstart != null">
				#{pubstart,jdbcType=VARCHAR},
			</if>
			<if test="lang != null">
				#{lang,jdbcType=VARCHAR},
			</if>
			<if test="nlmid != null">
				#{nlmid,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>


	<sql id="dynamic-journal-cols">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			iso_abbr,
			title,
			<if test="publisher != null">
				publisher,
			</if>
			<if test="medAbbr != null">
				med_abbr,
			</if>
			<if test="homepage != null">
				homepage,
			</if>
			<if test="pissn != null">
				pissn,
			</if>
			<if test="eissn != null">
				eissn,
			</if>
			<if test="country != null">
				country,
			</if>
			<if test="pubstart != null">
				pubstart,
			</if>
			<if test="lang != null">
				lang,
			</if>
			<if test="nlmid != null">
				nlmid,
			</if>
		</trim>
	</sql>

	<insert id="insertJournalSelectiveIgnoreDups" parameterType="net.megx.model.Journal">
		<!-- trying to ignore entry of journal which already exists, it requires 
			iso_abbr (ISO abbreviation to exist -->
		INSERT INTO core.journals
		<include refid="dynamic-journal-cols" />

		(SELECT * FROM ( VALUES
		<trim prefix=" (" suffix=")" suffixOverrides=",">
			#{isoAbbr,jdbcType=VARCHAR},
			<choose>
				<when test="title != null">
					#{title,jdbcType=VARCHAR},
				</when>
				<otherwise>
					#{isoAbbr,jdbcType=VARCHAR},
				</otherwise>
			</choose>
			<if test="publisher != null">
				#{publisher,jdbcType=VARCHAR},
			</if>

			<if test="medAbbr != null">
				#{medAbbr,jdbcType=VARCHAR},
			</if>
			<if test="homepage != null">
				#{homepage,jdbcType=VARCHAR},
			</if>
			<if test="pissn != null">
				#{pissn,jdbcType=VARCHAR},
			</if>
			<if test="eissn != null">
				#{eissn,jdbcType=VARCHAR},
			</if>
			<if test="country != null">
				#{country,jdbcType=VARCHAR},
			</if>
			<if test="pubstart != null">
				#{pubstart,jdbcType=VARCHAR},
			</if>
			<if test="lang != null">
				#{lang,jdbcType=VARCHAR},
			</if>
			<if test="nlmid != null">
				#{nlmid,jdbcType=VARCHAR},
			</if>
		</trim>
		) as tmp
		<include refid="dynamic-journal-cols" />

		WHERE NOT EXISTS (
		SELECT 1 FROM core.journals m where
		m.iso_abbr =
		tmp.iso_abbr)
		)
	</insert>

	<insert id="insertAuthorSelective" parameterType="Author">
		insert into core.authors
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="firstName != null">
				first_name,
			</if>
			<if test="lastName != null">
				last_name,
			</if>
			<if test="initials != null">
				initials,
			</if>
			<if test="sexCode != null">
				sex,
			</if>
			<if test="institute != null">
				institute,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="firstName != null">
				#{firstName,jdbcType=VARCHAR},
			</if>
			<if test="lastName != null">
				#{lastName,jdbcType=VARCHAR},
			</if>
			<if test="initials != null">
				#{initials,jdbcType=VARCHAR},
			</if>
			<if test="sexCode != null">
				#{sexCode,jdbcType=VARCHAR},
			</if>
			<if test="institute != null">
				#{institute,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<sql id="iAuthorListCols">
		first_name, last_name, initials, sex,institute
	</sql>
	<insert id="insertAuthorSelectiveIgnoreDups" parameterType="Author">
		insert into core.authors (
		<include refid="iAuthorListCols" />
		)
		SELECT
		<include refid="iAuthorListCols" />
		FROM ( VALUES
		<trim prefix=" (" suffix=")" suffixOverrides=",">
			#{firstName,jdbcType=VARCHAR},
			#{lastName,jdbcType=VARCHAR},
			#{initials,jdbcType=VARCHAR},
			#{sexCode,jdbcType=VARCHAR},
			#{institute,jdbcType=VARCHAR},
		</trim>
		) as t
		<trim prefix="(" suffix=")" suffixOverrides=",">
			first_name,
			last_name,
			initials,
			sex,
			institute
		</trim>

		WHERE NOT EXISTS (
		SELECT * FROM core.authors m where
		m.first_name =
		t.first_name AND
		m.last_name = t.last_name AND
		m.initials = t.initials
		AND
		m.sex = t.sex
		)

	</insert>



	<insert id="insertAuthorList">
		INSERT INTO core.authorlists(
		article_id, article_id_code, first_name,
		initials, last_name,
		sex, pos)
		VALUES (
		<choose>
			<when test="article.DOI != null">
				#{article.DOI,jdbcType=VARCHAR},
				'doi',
			</when>
			<otherwise>
				#{article.pmid,jdbcType=VARCHAR},
				'pmid',
			</otherwise>
		</choose>
		#{author.firstName}, #{author.initials}, #{author.lastName},
		#{author.sexCode}, #{position});

	</insert>

</mapper>