<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <prerequisites>
    <maven>3.0.0</maven>
  </prerequisites>

  <groupId>net.megx</groupId>
  <artifactId>parent-microb3-is</artifactId>
  <packaging>pom</packaging>
  <version>1.0.0-SNAPSHOT</version>

  <name>megx.net</name>
  <url>http://www.megx.net</url>

  <pluginRepositories>
    <pluginRepository>
      <id>maven-repo</id>
      <url>http://repo.maven.apache.org/maven2</url>
    </pluginRepository>
  </pluginRepositories>

  <repositories>
    <repository>
      <id>chon-repo</id>
      <layout>p2</layout>
      <url>http://choncms.megx.net/p2</url>
    </repository>
  </repositories>

  <!-- Properties are just defaults: need to be overwritten in profiles etc. -->
  <properties>
    <!-- maven plugin configuration properties -->
    <tycho.version>0.19.0</tycho.version>
    <tycho.groupid>org.eclipse.tycho</tycho.groupid>
    <wagon.version>2.5</wagon.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- all user defined properties get the mvn prefix -->

    <!-- If failed copy of bundle to plugins dir should fail the maven build -->
    <mvn.ant.failonerror>true</mvn.ant.failonerror>
  </properties>

  <!-- modules only include plugins -->
  <modules>
    <!-- build megx.net core bundle <module>net.megx.chon.core</module> -->
    <!-- build megdb connection and data model -->
    <module>../net.megx.megdb</module>
    <!-- build megx.net web services related: TODO refactor => delete <module>net.megx.chon.services</module> -->
    <!-- build megx.net web services related: TODO refactor => delete <module>net.megx.chon.services.ui</module> -->
    <!-- build megx.net velocity templates -->
    <module>../net.megx.chon.template</module>
    <!-- build megx.net oauth and stuff -->
    <module>../net.megx.security.api</module>
    <!-- build megx.net oauth and stuff: api and filter are interdependent -->
    <module>../net.megx.security.filter</module>
    <!-- build megx.net apps manager -->
    <module>../net.megx.apps-manager</module>
    <module>../net.megx.user-settings</module>

    <!-- Storage Service bundle -->
    <module>../net.megx.storage</module>
    <!-- REST Services -->
    <!-- Common services utilities -->
    <module>../net.megx.ws.common</module>
    <!-- Genome Services -->
    <module>../net.megx.ws.genome-services</module>
    <!-- Mixs -->
    <module>../net.megx.ws.mixs</module>
    <!-- SeqCD -->
    <module>../net.megx.ws.seqcd</module>

    <module>../net.megx.mapserver</module>

    <module>../net.megx.ui.table</module>
    <module>../net.megx.ui.chart</module>
    <module>../net.megx.ws.wod</module>
    <module>../net.megx.ws.blast</module>
    <module>../net.megx.ws.browse</module>
    <module>../net.megx.prox</module>
    <module>../net.megx.geo.pfam</module>
    <module>../net.megx.osd.registry</module>

    <!-- Earth Sampling App -->
    <module>../net.megx.esa</module>
    <!-- MegxBar -->

    <module>../net.megx.mg-traits</module>
    <module>../net.megx.ws.mg-traits</module>
    <!-- WebSocket broadcast module -->
    <module>../net.megx.broadcast</module>
    <module>../net.megx.blast</module>

    <module>../net.megx.pubmap</module>
    <module>../net.megx.megxbar</module>

    <!-- do not build for time being <module>net.megx.content.imp.exp</module> 
      <module>net.megx.was.webdav</module> <module>net.megx.ws.oauth.echo.example</module> -->
    <module>../net.megx.twitter</module>
    <module>../net.megx.mailer</module>
    <module>../net.megx.contact</module>
    <module>../net.megx.form-widget</module>
    <module>../net.megx.mibig</module>


    <!-- assembly module -->
    <module>../megx.net-workdir</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>9.1-901.jdbc4</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.atmosphere</groupId>
        <artifactId>atmosphere-runtime</artifactId>
        <version>2.0.2</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.5</version>
      </dependency>
      <dependency>
        <groupId>org.atmosphere</groupId>
        <artifactId>wasync</artifactId>
        <version>1.1.1</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.11</version>
      </dependency>
      <!-- megx.net modules -->
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.blast</artifactId>
        <version>0.0.1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.apps-manager</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.broadcast</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.chon.template</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.contact</artifactId>
        <version>0.0.3-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.esa</artifactId>
        <version>1.1.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.form-widget</artifactId>
        <version>0.0.1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.geo.pfam</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.mailer</artifactId>
        <version>0.0.2-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.mapserver</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.megdb</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.megxbar</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.mg-traits</artifactId>
        <version>0.0.1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.mibig</artifactId>
        <version>0.0.1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.osd.registry</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.prox</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.pubmap</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.security.api</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.security.filter</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.storage</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.twitter</artifactId>
        <version>0.0.1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.ui.chart</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.ui.table</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.user-settings</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.ws.blast</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.ws.browse</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.ws.common</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.ws.genome-services</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.ws.mg-traits</artifactId>
        <version>0.0.1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.ws.mixs</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.ws.seqcd</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>net.megx</groupId>
        <artifactId>net.megx.ws.wod</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <filters>
      <filter>${profile.filter.file}</filter>
    </filters>
    <!-- configuring for inheritance -->
    <!-- Plugin Management contains plugin elements in much the same way, 
      except that rather than configuring plugin information for this particular 
      project build, it is intended to configure project builds that inherit from 
      this one. However, this only configures plugins that are actually referenced 
      within the plugins element in the children. The children have every right 
      to override pluginManagement definitions. https://maven.apache.org/pom.html#Plugin_Management -->
    <pluginManagement>
      <plugins>
        <!-- Tycho for OSGI bundle creation -->
        <plugin>
          <groupId>${tycho.groupid}</groupId>
          <artifactId>target-platform-configuration</artifactId>
          <version>${tycho.version}</version>
          <configuration>
            <!-- <resolver>p2</resolver> -->
            <ignoreTychoRepositories>true</ignoreTychoRepositories>
            <environments>
              <environment>
                <os>win32</os>
                <arch>x86</arch>
              </environment>
            </environments>
          </configuration>
        </plugin>

        <plugin>
          <groupId>${tycho.groupid}</groupId>
          <artifactId>tycho-surefire-plugin</artifactId>
          <version>${tycho.version}</version>
        </plugin>
        <plugin>
          <groupId>${tycho.groupid}</groupId>
          <artifactId>tycho-maven-plugin</artifactId>
          <version>${tycho.version}</version>
          <extensions>true</extensions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>wagon-maven-plugin</artifactId>
          <version>1.0-beta-4</version>
        </plugin>
        <!-- <plugin> <groupId>org.apache.maven.wagon</groupId> <artifactId>wagon</artifactId> 
          <version>${wagon.version}</version> </plugin> -->
        <!-- general maven plugin configuration -->
        <plugin>
          <groupId>ro.isdc.wro4j</groupId>
          <artifactId>wro4j-maven-plugin</artifactId>
          <version>1.6.3</version>
          <executions>
            <execution>
              <phase>compile</phase>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.7</version>
          <configuration>
            <failOnError>${mvn.ant.failonerror}</failOnError>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
          <configuration>
            <source>1.6</source>
            <target>1.6</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.github.goldin</groupId>
          <artifactId>copy-maven-plugin</artifactId>
          <version>0.2.5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
          <configuration>
            <encoding>UTF-8</encoding>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.3.1</version>
          <configuration>
            <rules>
              <requireJavaVersion>
                <version>[1.6.0,)</version>
              </requireJavaVersion>
              <requireMavenVersion>
                <version>[3.0.3,)</version>
              </requireMavenVersion>
              <requireProperty>
                <property>project.version</property>
                <message>Project version must be
                  specified.</message>
                <regex>.*(\d|-SNAPSHOT)$</regex>
                <regexMessage>Project version must end
                  in a
                  number or
                  -SNAPSHOT.</regexMessage>
              </requireProperty>
              <evaluateBeanshell>
                <message><![CDATA[Only one of the three build profiles 'prod', 'default', and 'developer' must be active. To build for production use -P 'prod,!developer,!default']]></message>
                <condition><![CDATA[
                                    int count = 0;
                                    count += Boolean.valueOf("${profile.default.active}")   ? 1 : 0;
                                    count += Boolean.valueOf("${profile.prod.active}")      ? 1 : 0;
                                    count += Boolean.valueOf("${profile.developer.active}") ? 1 : 0;
                                    count == 1;
                                    ]]>
                </condition>
              </evaluateBeanshell>
            </rules>
            <fail>true</fail>
          </configuration>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings 
          only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.maven.plugins
                    </groupId>
                    <artifactId>
                      maven-enforcer-plugin
                    </artifactId>
                    <versionRange>
                      [1.2,)
                    </versionRange>
                    <goals>
                      <goal>enforce</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      com.github.goldin
                    </groupId>
                    <artifactId>
                      copy-maven-plugin
                    </artifactId>
                    <versionRange>
                      [0.2.5,)
                    </versionRange>
                    <goals>
                      <goal>copy</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.codehaus.mojo
                    </groupId>
                    <artifactId>
                      wagon-maven-plugin
                    </artifactId>
                    <versionRange>
                      [1.0-beta-4,)
                    </versionRange>
                    <goals>
                      <goal>download-single</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.5</version>
        </plugin>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.5.3</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-properties</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
          <execution>
            <id>install-phase-not-allowed</id>
            <phase>install</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <AlwaysFail>
                  <message>Execution of install is not allowed due to
                    side-effects of the Tycho build.
                  </message>
                </AlwaysFail>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>deploy-phase-not-allowed</id>
            <phase>deploy</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <AlwaysFail>
                  <message>Execution of deploy is not
                    allowed
                    due to
                    side-effects of
                    the Tycho build.</message>
                </AlwaysFail>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <reportPlugins>
            <plugin>
              <groupId>com.wakaleo.schemaspy</groupId>
              <artifactId>maven-schemaspy-plugin</artifactId>
              <version>1.0.4</version>
              <configuration>
                <databaseType>pgsql</databaseType>
                <jdbcUrl>jdbc:postgresql://${megx.db.host}:${megx.db.port}/${megx.db.name}</jdbcUrl>
                <database>${megx.db.name}</database>
                <host>${megx.db.host}</host>
                <user>${megx.db.user}</user>
                <password />
                <schemas>core,cv</schemas>
              </configuration>
            </plugin>
          </reportPlugins>
        </configuration>
      </plugin>
      <!-- TODO check if it is necessary here or better in net.megx.product -->
      <plugin>
        <groupId>${tycho.groupid}</groupId>
        <artifactId>target-platform-configuration</artifactId>
        <configuration>
          <!-- <resolver>p2</resolver> -->
          <ignoreTychoRepositories>true</ignoreTychoRepositories>
          <environments>
            <environment>
              <os>win32</os>
              <ws>win32</ws>
              <arch>x86</arch>
            </environment>
          </environments>
        </configuration>
      </plugin>
      <plugin>
        <groupId>${tycho.groupid}</groupId>
        <artifactId>tycho-maven-plugin</artifactId>
        <version>${tycho.version}</version>
      </plugin>
      <!-- prevent installation and deployment of the build artefacts -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

    </plugins>
  </build>


  <organization>
    <name>Micro B3</name>
    <url>http://www.microb3.eu</url>
  </organization>
  <inceptionYear>2012</inceptionYear>
  <developers>
    <!-- in alphabetical order of last Name -->
    <developer>
      <name>Jan Gerken</name>
    </developer>
    <developer>
      <name>Sebastian Gross</name>
    </developer>
    <developer>
      <name>Pavle Jonoski</name>
    </developer>
    <developer>
      <name>Renzo Kottmann</name>
    </developer>
    <developer>
      <name>Michael Schneider</name>
    </developer>
    <developer>
      <name>Julia Schnetzer</name>
    </developer>
    <developer>
      <name>Jovica Veljanovski</name>
    </developer>
  </developers>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <comments>A business-friendly permisseve OSS license</comments>
    </license>
  </licenses>

  <profiles>
    <profile>
      <id>prod</id>
      <properties>
        <profile.prod.active>true</profile.prod.active>
        <profile.filter.file>${profile.filter.dir}/prod.properties</profile.filter.file>
        <profile.config.dir>${project.basedir}/../config</profile.config.dir>
        <profile.checkstyle.file>${profile.config.dir}/megx_checks.xml</profile.checkstyle.file>
      </properties>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <configuration>
              <rules combine.children="append">
                <requireFilesExist>
                  <message>${profile.filter.file}
                    must exist.</message>
                  <files>
                    <file>${profile.filter.file}</file>
                  </files>
                </requireFilesExist>
              </rules>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>default</id>
      <properties>
        <profile.default.active>true</profile.default.active>
        <profile.config.dir>${project.basedir}/../config</profile.config.dir>
        <profile.checkstyle.file>${profile.config.dir}/megx_checks.xml</profile.checkstyle.file>
        <profile.filter.dir>${project.basedir}/../config</profile.filter.dir>
        <profile.filter.file>${profile.filter.dir}/default.properties</profile.filter.file>
      </properties>
      <!-- This profile only gets automatically activated if a user specific 
        properties file is missing -->
      <activation>
        <activeByDefault>false</activeByDefault>
        <file>
          <!-- Do not use ${profile.filter.file} in this section. During 
            profile activation only system properties are available but no maven properties. 
            Profile will silently always be activated if file is missing. -->
          <missing>../config/developer/${user.name}.properties</missing>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <configuration>
              <rules combine.children="append">
                <requireFilesExist>
                  <message>${profile.filter.file}
                    must exist.</message>
                  <files>
                    <file>${profile.filter.file}</file>
                  </files>
                </requireFilesExist>
              </rules>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>developer</id>
      <properties>
        <profile.developer.active>true</profile.developer.active>
        <profile.config.dir>${project.basedir}/../config</profile.config.dir>
        <profile.checkstyle.file>${profile.config.dir}/megx_checks.xml</profile.checkstyle.file>
        <profile.filter.dir>${project.basedir}/../config</profile.filter.dir>
        <profile.filter.file>${profile.config.dir}/developer/${user.name}.properties</profile.filter.file>
      </properties>
      <activation>
        <activeByDefault>false</activeByDefault>
        <file>
          <!-- Do not use ${profile.filter.file} in this section. During 
            profile activation only system properties are available but no maven properties. 
            Profile will silently never be activated. -->
          <exists>../config/developer/${user.name}.properties</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <configuration>
              <rules combine.children="append">
                <requireFilesExist>
                  <message>${profile.filter.file}
                    must exist
                    (start with
                    copy from ..config/default).</message>
                  <files>
                    <file>${profile.filter.file}</file>
                  </files>
                </requireFilesExist>
              </rules>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
