<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
>
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.megx</groupId>
        <artifactId>parent-microb3-is</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../net.megx/pom.xml</relativePath>
    </parent>

    <artifactId>megx.net-web</artifactId>
    <version>1.0.1-SNAPSHOT</version>
    <!-- version given by parent pom -->
    <packaging>war</packaging>


    <name>MB3-IS web application</name>
    <url>http://mb3is.megx.net</url>

    <properties>
        <mvn.megx.version>0.4</mvn.megx.version>
        <plugin.config.dir>config</plugin.config.dir>

        <mvn.megx.war.file.name>megx.net</mvn.megx.war.file.name>
        <!-- just to skip ant bundle copying, cause this project does not deploy 
            any bundle -->
        <mvn.ant.target.copy-single-bundle.skip>true</mvn.ant.target.copy-single-bundle.skip>
    </properties>

    <repositories>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>central</id>
            <name>Maven Repository Switchboard</name>
            <url>http://repo1.maven.org/maven2</url>
            <releases>
                <updatePolicy>never</updatePolicy>
            </releases>
        </repository>
        <repository>
            <id>nexus</id>
            <name>Nexus Sonatype Releases</name>
            <url>https://oss.sonatype.org/content/repositories/releases</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>com.choncms</groupId>
            <artifactId>choncms.starter</artifactId>
            <version>1.4</version>
        </dependency>

        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <dependency>
            <groupId>org.atmosphere</groupId>
            <artifactId>atmosphere-runtime</artifactId>
        </dependency>

        <dependency>
            <groupId>org.atmosphere</groupId>
            <artifactId>wasync</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
    </dependencies>

    <build>

        <defaultGoal>verify</defaultGoal>
        <!-- also used for war file name -->
        <finalName>${mvn.megx.war.file.name}</finalName>


        <plugins>
            <!-- This plugin parses the properties file (i.e. default/developer/prod 
                depending on the active profiel) and makes all properties of this file available 
                in the pom as maven properites (like they had been declared in the <properties> </properties> 
                section). This procedure is required for this module as many of these properties 
                are used to configure the build in the pom (e.g. enforcing the presence of the configured 
                directories.) -->
            <plugin>
                <groupId>org.kuali.maven.plugins</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>2.0.1</version>
                <configuration>
                    <locations>
                        <location>file:${profile.filter.file}</location>
                    </locations>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-setup.kson-to-workdir</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${megx.work.dir.path}/config</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${plugin.config.dir}</directory>
                                    <includes>
                                        <include>setup.kson</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-work-dir</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <requireFilesExist>
                                <message><![CDATA[These files must exist in correct version
                                for succesful launch:
                                ${megx.work.dir.path}
                                ${megx.work.dir.path}/repository
                                ${megx.work.dir.path}/plugins
                                ${megx.work.dir.path}/config
                                ]]></message>
                                <files>
                                    <file>${megx.work.dir.path}</file>
                                    <file>${megx.work.dir.path}/repository</file>
                                    <file>${megx.work.dir.path}/plugins</file>
                                    <file>${megx.work.dir.path}/config</file>
                                    <!-- This is just an indicator if Chon plugins 
                                        were build from net.megx.product -->
                                    <file>${megx.work.dir.path}/plugins/org.chon.cms.core_1.0.0.jar</file>
                                </files>
                            </requireFilesExist>
                            <requireProperty>
                                <property>megx.host.name</property>
                                <message><![CDATA[Missing: Hostname under which the webapp will be published e.g. localhost]]></message>
                                <regex>.*$</regex>
                            </requireProperty>
                            <requireProperty>
                                <property>megx.host.port</property>
                                <message><![CDATA[Missing: Host port under which the web application will be published e.g. localhost]]></message>
                                <regex>.*$</regex>
                            </requireProperty>
                            <requireProperty>
                                <property>megx.tomcat.home</property>
                                <message><![CDATA[Missing: The directory of tomcat installation.]]>
                                </message>
                            </requireProperty>
                            <requireProperty>
                                <property>megx.tomcat.port</property>
                                <message><![CDATA[Missing: The port tomcat is listening to]]>
                                </message>
                            </requireProperty>
                        </configuration>

                    </execution>
                    <execution>
                        <id>enforce-work-dir-kson</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <requireFilesExist>
                                <message><![CDATA[These files must exist in correct version
                                for succesful launch:
                                ${megx.work.dir.path}/config/setup.kson
                                ]]></message>
                                <files>
                                    <file>${megx.work.dir.path}/config/setup.kson</file>
                                </files>
                            </requireFilesExist>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-chon-plugins</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration combine.self="override">
                            <tasks>
                                <echoproperties />
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <!-- filters web.xml -->
                    <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
                    <webResources>
                        <resource>
                            <!-- this is relative to the pom.xml directory -->
                            <directory>properties</directory>
                            <filtering>true</filtering>
                            <targetPath>WEB-INF</targetPath>
                            <includes>
                                <include>*.properties</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.1.3</version>
                <configuration>
                    <container>
                        <containerId>${megx.cargo.container.id}</containerId>
                        <!-- Location of container installation: basically CATALINA.HOME -->
                        <home>${megx.tomcat.home}</home>
                        <timeout>300000</timeout>
                        <log>${megx.work.dir.path}/container.log</log>
                    </container>
                    <configuration>
                        <!-- container configuration -->
                        <type>existing</type>
                        <!-- For standalone configuration this is the location where 
                            Cargo will create the configuration and for existing configuration this is where 
                            it is located -->
                        <home>${megx.tomcat.home}</home>

                        <properties>
                            <cargo.servlet.port>${megx.tomcat.port}</cargo.servlet.port>
                        </properties>
                        <deployables>
                            <deployable>
                                <groupId>${project.groupId}</groupId>
                                <artifactId>${project.artifactId}</artifactId>
                                <type>war</type>
                            </deployable>
                        </deployables>
                    </configuration>
                </configuration>

                <executions>
                    <execution>
                        <id>run-server</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>redeploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>debug</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>1.1.3</version>
                        <configuration>
                            <configuration>
                                <properties>
                                    <cargo.servlet.port>${megx.tomcat.port}</cargo.servlet.port>
                                    <cargo.jvmargs>
                                        -agentlib:jdwp=transport=dt_socket,server=y,suspend=${megx.tomcat.debug.suspend},address=${megx.tomcat.debug.port}
                                        -Djava.compiler=NONE
                                    </cargo.jvmargs>
                                </properties>
                            </configuration>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
