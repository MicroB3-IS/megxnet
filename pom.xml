<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<prerequisites>
		<maven>3.0.0</maven>
	</prerequisites>

	<groupId>net.megx</groupId>
	<artifactId>parent-microb3-is</artifactId>
	<packaging>pom</packaging>
	<version>1.0.0-SNAPSHOT</version>

	<repositories>
		<repository>
			<id>chon-repo</id>
			<layout>p2</layout>
			<url>http://p2.choncms.com/SNAPSHOT
		 </url>
		</repository>
	</repositories>


	<properties>
		<!-- all maven properties get the mvn prefix -->
		<!-- just dump defaults: need to be overwritten in profiles etc. -->
		<mvn.cargo.container.id>tomcat7x</mvn.cargo.container.id>
		<mvn.tomcat.home>${user.home}/tomcat</mvn.tomcat.home>
		<mvn.tomcat.port>8080</mvn.tomcat.port>
		<mvn.work.dir.name>megx.net-work.dir</mvn.work.dir.name>
		<!-- not sure if should stay here -->
		<mvn.work.dir.path>${user.home}/${mvn.work.dir.name}</mvn.work.dir.path>
		<tycho.version>0.15.0</tycho.version>
		<tycho.groupid>org.eclipse.tycho</tycho.groupid>
		<!-- to configure if failed copy of bundle to plugins dir should fail the 
			maven build -->
		<mvn.ant.failonerror>true</mvn.ant.failonerror>
		<mvn.module.default.version>1.0.0.SNAPSHOT</mvn.module.default.version>
	</properties>


	<modules>
		<!-- build megx.net core bundle -->
		<module>net.megx.chon.core</module>
		<!-- build megdb connection and data model -->
		<module>net.megx.megdb</module>
		<!-- build megx.net web services related: TODO refactor => delete -->
		<module>net.megx.chon.services</module>
		<!-- build megx.net web services related: TODO refactor => delete -->
		<module>net.megx.chon.services.ui</module>
		<!-- build megx.net velocity templates -->
		<module>net.megx.chon.template</module>

		<module>net.megx.pubmap</module>
		<!-- build megx.net oauth and stuff -->
		<module>net.megx.security.api</module>
		<!-- build megx.net oauth and stuff: api and filter are interdependent -->
		<module>net.megx.security.filter</module>
		<!-- build megx.net apps manager -->
		<module>net.megx.apps-manager</module>
		
		<!-- WebDAV module -->
		<module>net.megx.was.webdav</module>
		
		<module>net.megx.mapserver</module>
		<module>net.megx.content.imp.exp</module>
		<module>net.megx.ui.table</module>
		
		<!-- where and what is chon and get all chon bundles <module>target-definition</module> -->
		<!-- what bundles will be included in the final build -->
		<module>net.megx.product</module>
		<!-- does not need to be build always: TODO configure the setup.proporteis 
			according to build -->
		<module>megx.net-web</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
			</dependency>
			<dependency>
				<groupId>postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>9.1-901.jdbc4</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>megx.net-web</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>net.megx.chon.core</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>net.megx.chon.services</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>net.megx.chon.services.ui</artifactId>
				<version>1.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>net.megx.chon.template</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>net.megx.megdb</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>net.megx.pubmap</artifactId>
				<version>${project.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<build>
		<!-- configuring for inheritance -->
		<!-- Plugin Management contains plugin elements in much the same way, except 
			that rather than configuring plugin information for this particular project 
			build, it is intended to configure project builds that inherit from this 
			one. However, this only configures plugins that are actually referenced within 
			the plugins element in the children. The children have every right to override 
			pluginManagement definitions. https://maven.apache.org/pom.html#Plugin_Management -->
		<pluginManagement>
			<plugins>
				<!-- Tycho for OSDG bundle creation -->
				<plugin>
					<groupId>${tycho.groupid}</groupId>
					<artifactId>target-platform-configuration</artifactId>
					<version>${tycho.version}</version>
				</plugin>
				<plugin>
					<groupId>${tycho.groupid}</groupId>
					<artifactId>tycho-maven-plugin</artifactId>
					<version>${tycho.version}</version>
					<extensions>true</extensions>
				</plugin>
				<!-- general maven plugin configuration -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
					<configuration>
						<failOnError>${mvn.ant.failonerror}</failOnError>
					</configuration>
					<executions>
						<execution>
							<id>copy-chon-plugins</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target name="copy-single-bundle">
									<copy todir="${mvn.work.dir.path}/plugins"
										file="${project.build.directory}/${project.artifactId}-${project.version}.jar"
										overwrite="true" />
								</target>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.5</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>

			<plugin>
				<groupId>${tycho.groupid}</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<version>${tycho.version}</version>
				<configuration>
					<!-- <resolver>p2</resolver> -->
					<ignoreTychoRepositories>true</ignoreTychoRepositories>
					<environments>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86</arch>
						</environment>

					</environments>
				</configuration>
			</plugin>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-antrun-plugin</artifactId> 
				</plugin> -->
			<plugin>
				<groupId>${tycho.groupid}</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tycho.version}</version>
			</plugin>
		</plugins>
	</build>


	<organization>
		<name>Micro B3</name>
		<url>http://www.microb3.eu</url>
	</organization>
	<inceptionYear>2012</inceptionYear>
	<developers>
		<!-- in alphabetical order of last Name -->
		<developer>
			<name>Sebastian Gross</name>
		</developer>
		<developer>
			<name>Jovica Jonoski</name>
		</developer>
		<developer>
			<name>Renzo Kottmann</name>
		</developer>
		<developer>
			<name>Pavle Jonoski</name>
		</developer>
		<developer>
			<name>Michael Schneider</name>
		</developer>
		<developer>
			<name>Julia Schnetzer</name>
		</developer>
	</developers>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<comments>A business-friendly permisseve OSS license</comments>
		</license>
	</licenses>
</project>
