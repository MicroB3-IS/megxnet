<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>net.megx</groupId>
		<artifactId>parent-microb3-is</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>megx.net-web</artifactId>
	<version>1.0.1-SNAPSHOT</version>
	<!-- version given by parent pom -->
	<packaging>war</packaging>


	<name>megx.net web application</name>
	<url>http://www.megx.net</url>
	<!-- just to skip ant bundle copying, cause this project does not deploy 
		any bundle -->
	<properties>
		<mvn.ant.target.copy-single-bundle.skip>true</mvn.ant.target.copy-single-bundle.skip>
	</properties>



	<repositories>
		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>central</id>
			<name>Maven Repository Switchboard</name>
			<url>http://repo1.maven.org/maven2</url>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
		</repository>
		<repository>
			<id>nexus</id>
			<name>Nexus Sonatype Releases</name>
			<url>https://oss.sonatype.org/content/repositories/releases</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>com.choncms</groupId>
			<artifactId>choncms.starter</artifactId>
			<version>1.6</version>
		</dependency>


		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
	</dependencies>

	<build>

		<defaultGoal>post-integration-test</defaultGoal>
		<!-- also used for war file name -->
		<finalName>megx.net</finalName>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<configuration>
					<rules combine.children="append">
						<requireFilesExist combine.children="append">
							<message>File must exist in correct version for succesful lauch</message>
							<files>
								<file>${mvn.work.dir.path}</file>
								<file>${mvn.work.dir.path}/config</file>
								<file>${mvn.work.dir.path}/plugins</file>
								<!-- This is just an indicator if Chon plugins were build from net.megx.product -->
								<file>${mvn.work.dir.path}/plugins/org.chon.cms.core_1.0.0.jar</file>
							</files>
						</requireFilesExist>
					</rules>
				</configuration>
				<!-- standard war lifecycle does not have validate phase -->
				<executions>
					<execution>
						<id>enforce-work-dir</id>
						<phase>validate</phase>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>echo-properties</id>
						<phase>pre-intergration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<echoproperties />
							</tasks>
						</configuration>
					</execution>
					<execution>
						<id>copy-chon-plugins</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<!-- we do not want to copy anything special here therefore we set 
								the property in this POM so that ant will skip this target -->
							<target unless="mvn.ant.target.copy-single-bundle.skip" />
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.3.1</version>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<outputDirectory>${mvn.work.dir.path}/config</outputDirectory>
					<resources>
						<resource>
							<directory>config</directory>
							<filtering>false</filtering>
						</resource>
					</resources>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.26</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
					<webResources>
						<resource>
							<!-- this is relative to the pom.xml directory -->
							<directory>properties</directory>
							<filtering>true</filtering>
							<targetPath>WEB-INF</targetPath>
							<includes>
								<include>*.properties</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.1.3</version>
				<!-- cargo plugin config -->
				<configuration>
					<container>
						<containerId>${mvn.cargo.container.id}</containerId>
						<!-- Location of container installation: basically CATALINA.HOME -->
						<home>${mvn.tomcat.home}</home>
						<timeout>100000</timeout>
						<log>${mvn.work.dir.path}/container.log</log>
						<!-- <output>${project.build.directory}/${mvn.cargo.container.id}/container.log</output> -->
					</container>
					<configuration>
						<!-- container configuration -->
						<type>existing</type>
						<!-- For standalone configuration this is the location where Cargo 
							will create the configuration and for existing configuration this is where 
							it is located -->
						<home>${mvn.tomcat.home}</home>

						<properties>
							<cargo.servlet.port>${mvn.tomcat.port}</cargo.servlet.port>
						</properties>
						<deployables>
							<deployable>
								<groupId>${project.groupId}</groupId>
								<artifactId>${project.artifactId}</artifactId>
								<type>war</type>
								<properties>
									<context>megx.net</context>
								</properties>
							</deployable>
						</deployables>
					</configuration>
				</configuration>

				<executions>
					<execution>
						<id>run-server</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- for eclipse:eclipse project generation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>
							org.eclipse.wst.common.project.facet.core.nature
						</projectnature>
						<projectnature>
							org.eclipse.wst.common.modulecore.ModuleCoreNature
						</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>
							org.eclipse.wst.common.project.facet.core.builder
						</buildcommand>
						<buildcommand>
							org.eclipse.wst.validation.validationbuilder
						</buildcommand>
					</additionalBuildcommands>
					<additionalProjectFacets>
						<jst.java>6.0</jst.java>
						<jst.web>2.5</jst.web>
					</additionalProjectFacets>
					<wtpversion>2.0</wtpversion>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>
